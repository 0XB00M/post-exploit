#include <stdio.h>
#include <Windows.h>

int basic_coding(void) {

	/* === STRUCTURE === */
	typedef struct tagTHREADENTRY32 {
		DWORD dwSize; // Member 1
		DWORD cntUsage; // Member 2
		DWORD th32ThreadID;
		DWORD th32OwnerProcessID;
		LONG  tpBasePri;
		LONG  tpDeltaPri;
		DWORD dwFlags;
	} STRUCTURE_NAME, * PSTRUCTURE_NAMEt;
	//Initializing a Structure
	STRUCTURE_NAME struct1 = { 0 };
	//Initialize structure pointer
	PSTRUCTURE_NAMEt structpointer1 = NULL;


	//Accessing and intializing a structure via pointers using (->)
	typedef struct _STRUCTURE_NAME {
		int ID;
		int Age;
	} STRUCTURE_NAME2, * PSTRUCTURE_NAME;

	STRUCTURE_NAME2 struct2 = { 0 };
	PSTRUCTURE_NAME structpointer2 = &struct2;
	structpointer2->ID = 87656;
	printf("The structure's ID member: %d \n", structpointer2->ID);


	/* === Enumeration === */
	enum Weekdays {
		Monday,		//0
		Tuesday,	//1
		Wednesday,	//2
		Thrusday	//3
	};
	enum Weekdays EnumName = Tuesday;
	switch (EnumName) {
		case Monday:
			printf("Today is Monday !\n");
			break;
		case Tuesday:
			printf("Today is Tuesday !\n");
			break;
		case Wednesday:
			printf("Today is Wednesday !\b");
			break;
		default:
			break;

	}

	/* === Union === */
	union ExampleUnion {
		int IntegerVar;
		char CharVar;
		float Floatvar;

	};
	//ExampleUnion can store char, int, float data types in the same memory location.



	/* === Bitwise === */
	//Bitwise operators uses to manipulate individual bits of a binary value.




	return 0;
}